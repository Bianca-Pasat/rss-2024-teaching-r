---
title: "More interactive, more engaging"
subtitle: "Teaching R in a lecture environment"
author: "RSS International Conference 2024<br><small>Nicola Rennie</small>"
format:
  LUstyle-revealjs:
    footer: "[nrennie.rbind.io/rss-2024-teaching-r](https://nrennie.github.io/rss-2024-teaching-r)"
    logo: "images/CHICASlogo.png"
    auto-stretch: false
    self-contained: true
    embed-resources: true
execute: 
  echo: true
  eval: false
filters:
  - webr
revealjs-plugins:
  - drop
---

## About me

::: columns
::: {.column .right width="50%"}

Lecturer in Health Data Science within [Centre for Health Informatics, Computing, and Statistics](https://chicas.lancaster-university.uk/).

<br>

Academic background in statistics, with experience in data science consultancy.

<br>

Teaching students with mathematical and non-mathematical backgrounds, at a variety of levels, in both academia and industry. 

:::

::: {.column width="50%"}

![](images/CHICASlogo.png){fig-align="center" fig-alt="CHICAS logo" width=80%}

:::
:::

## Teaching statistics with R

::: columns
::: {.column width="50%"}

::: {.incremental}

* Many introductory (and more advanced) statistics courses also include instruction on using R.

* Many courses teach statistical concepts in lectures, then the practical aspects of using R in separate workshops with smaller groups.

* Including programming examples in a lecture environment isn't always easy (for instructors and students).

:::

:::

::: {.column width="50%"}

![](images/R_logo.png){fig-align="center" fig-alt="R logo" width="80%"}

:::

:::

## Screenshots of RStudio

![](images/rstudio.png){fig-align="center" fig-alt="Screenshot of RStudio showing code and map" width="80%"}

## Screenshots of code

![](images/rstudio-zoom.png){fig-align="center" fig-alt="Screenshot of RStudio showing code" width=80%}

## Including code blocks

```{r}
#| eval: false
#| echo: true
# read in data
census <- readxl::read_xlsx("Data/Census2021-health-la.xlsx", skip = 4)

# get local authority map shapefiles
la_map <- sf::st_read("Data/Local_Authority_Districts_December_2021/LAD_DEC_2021_GB_BGC.shp") 

# calculate percentage that have bad/very bad
bad_health <- census |> 
  mutate(Percentage = `Bad health \r\n(age-standardised \r\nproportions)` + 
           `Very bad health \r\n(age-standardised \r\nproportions)`) |> 
  select(`Area code`, Percentage) 

# highest / lowest percentage
slice_max(bad_health, Percentage, n = 1)
slice_min(bad_health, Percentage, n = 1)
round(mean(bad_health$Percentage), 1)
```

## Live coding!

. . . 

::: columns
::: {.column}

**Pros**

* shows the process of writing code

* teaches students how to debug code

* demonstrates good programming practices

:::

::: {.column .fragment}

**Cons**

* Switching between windows 

* More pressure as a demonstrator 

* Hard for students to run the code themselves

:::

:::

## Live coding!

. . . 

::: columns
::: {.column}

<br>

**How do we make live coding easier (and better)?**

<br> 

with webR!

:::

::: {.column}

![](images/webR.png){fig-align="center" fig-alt="webR logo" width=80%}

:::

:::


## What is webR?

::: columns
::: {.column}

[webR](https://docs.r-wasm.org/webr/latest/) is a version of R that runs in a web browser.

::: {.fragment}

* You don’t need to install R, or create a cloud account.

* You don’t need to set up a server.

* It just works (even on your phone).

:::

:::

::: {.column}

![](images/webR.png){fig-align="center" fig-alt="webR logo" width=80%}

:::

:::

## Using webR for teaching

::: columns
::: {.column}

* Interactive code blocks in slides

* Interactive R console from slides

* Deploying Shiny apps

* Quarto Live

:::

::: {.column}

![](images/drop.gif){fig-align="center" fig-alt="Gif of Quarto drop" width=100%}

:::

:::

## But first, Quarto...

Quarto is a way to combine code with text to create a variety of output formats. Essentially, second generation R Markdown that also natively supports other programming languages.

<br>

::: {.fragment}
  
Create HTML slides:

```md
---
title: "Lecture 1"
format: revealjs
---
```

:::

## Adding code blocks with Quarto

```{r}
#| echo: fenced
# set a random seed and generate data
set.seed(123)
x <- rnorm(100)

# calculate standard deviation
sd(x)
```

<br>

::: {.fragment}

```{r}
# set a random seed and generate data
set.seed(123)
x <- rnorm(100)

# calculate standard deviation
sd(x)
```

:::

## Interactive code blocks

```{webr-r}
# set a random seed and generate data
set.seed(123)
x <- rnorm(100)

# calculate standard deviation
sd(x)
```

## Interactive code blocks

Install the [Quarto webR extension](https://github.com/coatless/quarto-webr):

```md
quarto add coatless/quarto-webr
```

. . . 

<br>
Add the webR filter to slides:

```md
format: revealjs
filters:
  - webr
```

. . . 

<br>
Add a webR code block:

````md
```{webr-r}
# set a random seed and generate data
set.seed(123)
x <- rnorm(100)

# calculate mean
mean(x)
```
````

## Interactive console

::: {.fragment}

![](images/drop.gif){fig-align="center" fig-alt="Gif of Quarto drop" width=90%}
:::

## Interactive console

* Press the "`" key to make the console appear/disappear. Alternatively, press the console button at the bottom left of the slide.

* You can load packages automatically.

* The state is maintained over multiple slides.

## Interactive code blocks

Install the [Quarto Drop plugin](https://github.com/r-wasm/quarto-drop):

```md
quarto add r-wasm/quarto-drop
```
. . . 

<br>
Add the drop plugin to slides:

```md
format: revealjs
revealjs-plugins:
  - drop
```

## Advantages and disadvantages

::: columns
::: {.column}

**Advantages**

* Write and run code without switching between slides and RStudio.

* Students can engage with code in lectures on their phones.

* No set up required for students (and easy to fix mistakes!)

* Use code blocks that are empty, have comments, or have pre-filled code.

:::

::: {.column .fragment}

**Limitations**

* Requires an internet connection.

* Not a replacement for workshops. Teaching R/RStudio/package installation is still important.

:::

:::

## Resources

* Tidyverse blog from George Stagg: [www.tidyverse.org/blog/2024/04/webr-0-3-1](https://www.tidyverse.org/blog/2024/04/webr-0-3-1/)

* Video on *Creating your first webR-powered Quarto document* by James Balamuta: [youtu.be/DoRR2S5lLvk?t=5](https://youtu.be/DoRR2S5lLvk?t=5)

* Quarto Live: [github.com/r-wasm/quarto-live](https://github.com/r-wasm/quarto-live)

* Source code for these slides: [github.com/nrennie/rss-2024-teaching-r](https://github.com/nrennie/rss-2024-teaching-r)

## Links

::: columns
::: {.column}

<br>

{{< fa globe >}} [nrennie.rbind.io](https://nrennie.rbind.io/)

<br> 

{{< fa brands linkedin >}} [nicola-rennie](https://www.linkedin.com/in/nicola-rennie/)

<br>

{{< fa brands github >}} [github.com/nrennie/rss-2024-teaching-r](https://github.com/nrennie/rss-2024-teaching-r)

<br>

{{< fa laptop >}} [nrennie.rbind.io/rss-2024-teaching-r](https://nrennie.rbind.io/rss-2024-teaching-r/)

:::

::: {.column}

![](images/qr_code.png){fig-align="center" fig-alt="QR code" width=80%}

:::

:::
